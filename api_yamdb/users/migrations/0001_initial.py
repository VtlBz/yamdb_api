# Generated by Django 3.2.16 on 2022-12-24 11:50

import core.validators
import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='YamdbUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(db_index=True, error_messages={'unique': 'Пользователь с таким никнеймом уже зарегистрирован.'}, help_text='Никнейм пользователя. Обязательное поле. Должно быть уникальным. 150 символов или меньше. Допустимы только буквы, цифры и символы @/./+/-/_ .', max_length=150, unique=True, validators=[core.validators.YaMDbUsernameValidator()], verbose_name='Никнейм')),
                ('email', models.EmailField(db_index=True, error_messages={'unique': 'Пользователь с таким адресом уже зарегистрирован.'}, help_text='E-mail адрес пользователя. Обязательное поле. Должно быть уникальным. 254 символа или меньше.', max_length=254, unique=True, verbose_name='E-mail адрес')),
                ('role', models.CharField(blank=True, choices=[('user', 'Пользователь'), ('moderator', 'Модератор'), ('admin', 'Администратор')], default='user', help_text='Роль пользователя', max_length=30, verbose_name='Роль')),
                ('bio', models.TextField(blank=True, default='', help_text='Информация о пользователе (необязательно)', verbose_name='Биография')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('pk',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
